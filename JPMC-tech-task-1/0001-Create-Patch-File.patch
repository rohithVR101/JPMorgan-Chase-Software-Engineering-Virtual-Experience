From 5ff04266823d63e7a6919a2432f2b28265391f9c Mon Sep 17 00:00:00 2001
From: Rohith Adithya <rohithriaz11@gmail.com>
Date: Sun, 17 May 2020 15:46:41 +0530
Subject: [PATCH] Create Patch File

---
 __pycache__/client3.cpython-37.pyc | Bin 0 -> 1112 bytes
 client3.py                         |   8 +++++---
 client_test.py                     |  19 ++++++++++++++++++-
 3 files changed, 23 insertions(+), 4 deletions(-)
 create mode 100644 __pycache__/client3.cpython-37.pyc

diff --git a/__pycache__/client3.cpython-37.pyc b/__pycache__/client3.cpython-37.pyc
new file mode 100644
index 0000000000000000000000000000000000000000..8087eeec0bf0222cc2be7e6dc09a622b7711f573
GIT binary patch
literal 1112
zcmYjQPj4JG6t`zQv$M%=2}$#3>BU8==t`ss>LpqgC`|$q5>Z-&BCIW=+40+ClG&M!
z$BUX}azM+G@4)8B$KVTa;OHx--Z^pN*_%|@djIS<&p-d3=S91{L~#7<|MA0bO+x;*
z!QH@^JV&YiLM4f$IT6%ZPk7Gy!grPlCOr{IUxbp$;1?nqGL#Lp5j16V;i*60{0d93
z4B?E<=mB|Mix&9vHqi5X^Y<W_uK=5~8*)Q$==^<a#cD>x+M7LC#q3>i9~y9fM*B>x
ziw&_UwqOg^VEq|^j%>m@Y``XL4cP{nQA#fB6T7|y5v<AO4nf`OkePS8dvt<#`IdCs
zZ}DE_X!`I>>v3;qCoj_^KPxNU+uPmS-MO5Ay81kmpZ;{6{X+>!QQQbnGn9Rl>N%<!
z>vhOA)z<SmMEZCdz4lzp-o<|H)&3@t!2@#5YHFjJ4H+T{r#*hGN;ye^Cwb1xA=hWX
z3jhg{|Cr<xsJJfqDHNa*jY(W4IvJN)p}7evU8WbNq04bR$fOCzDobGzC)LGU4<UA`
z35I!@=x$(w%Sow0*=5tj58_3B6LS}?vbX!4sAV+&?jQF02W2`LL7}UMeS~=qsjm7b
zFzA1M{7tD&lfpXt+ZxidZH-m7KiM8%J?*D?hTlAWGQKjcQ_u&9_}C%FvXy&weneMr
zwy0|3T51v5VXYNMaD+}xYWjd6QFQtt{|Yom60*|L<e<k1PYQYK54gkK^-SY-^UfK#
zjfHAqRTCkqSGH0YqspDm)Qa1Q<57|oaXkI#r6o)9M-@*re~fhX9#tQ6yrr}52=uzs
z$W_8T<A3pD-}ncIUv@tb_a-XOv%wPu_?#*&!bNPD&PE{Ec~ur7REWMDiQwgThp)aj
z^vJRC4oH!VAdU^ouxBQ~+*2?#HUV~1R-$oNxq+3-F%%{omTHt}!xSXags$0@2p!T&
zSvp<omHoYyZG&sKdo_jrA4RtNYQfX95x&hFK3m77ild6Cn?CcI7d4|s<gZdrnZJbH
IjOdp4AEK5YQvd(}

literal 0
HcmV?d00001

diff --git a/client3.py b/client3.py
index f1771c3..7ff1d57 100644
--- a/client3.py
+++ b/client3.py
@@ -35,14 +35,14 @@ def getDataPoint(quote):
 	stock = quote['stock']
 	bid_price = float(quote['top_bid']['price'])
 	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
+	price = (bid_price+ask_price)/2
 	return stock, bid_price, ask_price, price
 
 def getRatio(price_a, price_b):
 	""" Get ratio of price_a and price_b """
 	""" ------------- Update this function ------------- """
 	""" Also create some unit tests for this function in client_test.py """
-	return 1
+	return price_a/price_b
 
 # Main
 if __name__ == "__main__":
@@ -50,10 +50,12 @@ if __name__ == "__main__":
 	# Query the price once every N seconds.
 	for _ in iter(range(N)):
 		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+		prices={}
 
 		""" ----------- Update to get the ratio --------------- """
 		for quote in quotes:
 			stock, bid_price, ask_price, price = getDataPoint(quote)
+			prices[stock]=price
 			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+		print ("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..2dad5cc 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,5 +1,5 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint,getRatio
 
 class ClientTest(unittest.TestCase):
   def test_getDataPoint_calculatePrice(self):
@@ -8,6 +8,10 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+        dataPoint=(quote['stock'],quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price']+quote['top_ask']['price'])/2)
+        self.assertEqual(getDataPoint(quote),dataPoint)
+
 
   def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
     quotes = [
@@ -15,9 +19,22 @@ class ClientTest(unittest.TestCase):
       {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
     ]
     """ ------------ Add the assertion below ------------ """
+    for quote in quotes:
+        dataPoint=(quote['stock'],quote['top_bid']['price'],quote['top_ask']['price'],(quote['top_bid']['price']+quote['top_ask']['price'])/2)
+        self.assertEqual(getDataPoint(quote),dataPoint)
 
 
   """ ------------ Add more unit tests ------------ """
+  def test_getRatio(self):
+    quotes = [
+      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
+      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
+    ]
+    """ ------------ Add the assertion below ------------ """
+    price_a=getDataPoint(quotes[0])[2]
+    price_b=getDataPoint(quotes[1])[2]
+    ratio=price_a/price_b
+    self.assertEqual(getRatio(price_a,price_b),ratio)
 
 
 
-- 
2.26.2.windows.1

